{
  "address": "0xC28AE54Bd9C7Ff9aA80b305F1f3A2e04D59703b9",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "citizen",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "fullName",
          "type": "string"
        }
      ],
      "name": "IdentityCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "citizen",
          "type": "address"
        }
      ],
      "name": "RequestApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "citizen",
          "type": "address"
        }
      ],
      "name": "RequestRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "citizen",
          "type": "address"
        }
      ],
      "name": "RequestSubmitted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dateOfExpiry",
          "type": "uint256"
        }
      ],
      "name": "approveRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "citizenRequestIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getIdentity",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "fullName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dateOfBirth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dateOfExpiry",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "citizenship",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct DigitalIdentity.Identity",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyIdentity",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "fullName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dateOfBirth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dateOfExpiry",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "citizenship",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct DigitalIdentity.Identity",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingRequests",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "identityExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issuer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "rejectRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "citizen",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "fullName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dateOfBirth",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "citizenship",
          "type": "string"
        },
        {
          "internalType": "enum DigitalIdentity.RequestStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "fullName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dateOfBirth",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "citizenship",
          "type": "string"
        }
      ],
      "name": "submitRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8e2682e3fc79dd43de6d172e4e439daa9d2af081e8df7b45f3579e85e3a8a727",
  "receipt": {
    "to": null,
    "from": "0x50278E3357f748298df487C96De4C5072142a073",
    "contractAddress": "0xC28AE54Bd9C7Ff9aA80b305F1f3A2e04D59703b9",
    "transactionIndex": 69,
    "gasUsed": "1178729",
    "logsBloom": "0x
    "blockHash": "0x923870c9a78417e77d858e1909b1068d8ef2c6650b0ff9f193a6a7c7b5308e81",
    "transactionHash": "0x8e2682e3fc79dd43de6d172e4e439daa9d2af081e8df7b45f3579e85e3a8a727",
    "logs": [],
    "blockNumber": 8420566,
    "cumulativeGasUsed": "9485388",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "c548b3be472e9d12f10272c9313b818e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"citizen\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"fullName\",\"type\":\"string\"}],\"name\":\"IdentityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"citizen\",\"type\":\"address\"}],\"name\":\"RequestApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"citizen\",\"type\":\"address\"}],\"name\":\"RequestRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"citizen\",\"type\":\"address\"}],\"name\":\"RequestSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dateOfExpiry\",\"type\":\"uint256\"}],\"name\":\"approveRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"citizenRequestIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getIdentity\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"fullName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dateOfExpiry\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"citizenship\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct DigitalIdentity.Identity\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyIdentity\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"fullName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dateOfExpiry\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"citizenship\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct DigitalIdentity.Identity\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingRequests\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"identityExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"rejectRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"citizen\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"fullName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"citizenship\",\"type\":\"string\"},{\"internalType\":\"enum DigitalIdentity.RequestStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"fullName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"citizenship\",\"type\":\"string\"}],\"name\":\"submitRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveRequest(uint256,uint256)\":{\"notice\":\"Issuer approves a request and issues an identity\"},\"getPendingRequests()\":{\"notice\":\"Issuer views all pending requests (IDs only)\"},\"rejectRequest(uint256)\":{\"notice\":\"Issuer rejects a request\"},\"submitRequest(string,uint256,string)\":{\"notice\":\"Citizen submits a new request for ID issuance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DigitalIdentity.sol\":\"DigitalIdentity\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DigitalIdentity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\ncontract DigitalIdentity {\\r\\n    // --- Roles & State ---\\r\\n    address public constant issuer = 0xfa65490C296Bfc0A053EA828EA3069718f4478b6;\\r\\n    uint256 private nextRequestId;\\r\\n\\r\\n    constructor() {\\r\\n        nextRequestId = 1;\\r\\n    }\\r\\n\\r\\n    enum RequestStatus { Pending, Approved, Rejected }\\r\\n\\r\\n    struct Request {\\r\\n        uint256 id;\\r\\n        address citizen;\\r\\n        string fullName;\\r\\n        uint256 dateOfBirth;\\r\\n        string citizenship;\\r\\n        RequestStatus status;\\r\\n    }\\r\\n\\r\\n    // Mappings for requests\\r\\n    mapping(uint256 => Request) public requests;\\r\\n    mapping(address => uint256[]) public citizenRequestIds;\\r\\n\\r\\n    // Mapping for issued identities\\r\\n    struct Identity {\\r\\n        string fullName;\\r\\n        uint256 dateOfBirth;\\r\\n        uint256 dateOfExpiry;\\r\\n        string citizenship;\\r\\n        bool exists;\\r\\n    }\\r\\n    mapping(address => Identity) private identities;\\r\\n\\r\\n    // --- Events ---\\r\\n    event RequestSubmitted(uint256 indexed requestId, address indexed citizen);\\r\\n    event RequestApproved(uint256 indexed requestId, address indexed citizen);\\r\\n    event RequestRejected(uint256 indexed requestId, address indexed citizen);\\r\\n    event IdentityCreated(address indexed citizen, string fullName);\\r\\n\\r\\n    // --- Modifiers ---\\r\\n    modifier onlyIssuer() {\\r\\n        require(msg.sender == issuer, \\\"Caller is not the authorized issuer\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // --- Request Workflow ---\\r\\n\\r\\n    /// @notice Citizen submits a new request for ID issuance\\r\\n    function submitRequest(\\r\\n        string calldata fullName,\\r\\n        uint256 dateOfBirth,\\r\\n        string calldata citizenship\\r\\n    ) external {\\r\\n        uint256 requestId = nextRequestId++;\\r\\n        requests[requestId] = Request({\\r\\n            id: requestId,\\r\\n            citizen: msg.sender,\\r\\n            fullName: fullName,\\r\\n            dateOfBirth: dateOfBirth,\\r\\n            citizenship: citizenship,\\r\\n            status: RequestStatus.Pending\\r\\n        });\\r\\n        citizenRequestIds[msg.sender].push(requestId);\\r\\n        emit RequestSubmitted(requestId, msg.sender);\\r\\n    }\\r\\n\\r\\n    /// @notice Issuer views all pending requests (IDs only)\\r\\n    function getPendingRequests() external view returns (uint256[] memory) {\\r\\n        uint256[] memory temp = new uint256[](nextRequestId - 1);\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 1; i < nextRequestId; i++) {\\r\\n            if (requests[i].status == RequestStatus.Pending) {\\r\\n                temp[count++] = i;\\r\\n            }\\r\\n        }\\r\\n        uint256[] memory pending = new uint256[](count);\\r\\n        for (uint256 j = 0; j < count; j++) {\\r\\n            pending[j] = temp[j];\\r\\n        }\\r\\n        return pending;\\r\\n    }\\r\\n\\r\\n    /// @notice Issuer approves a request and issues an identity\\r\\n    function approveRequest(uint256 requestId, uint256 dateOfExpiry) external onlyIssuer {\\r\\n        Request storage req = requests[requestId];\\r\\n        require(req.status == RequestStatus.Pending, \\\"Request not pending\\\");\\r\\n        req.status = RequestStatus.Approved;\\r\\n\\r\\n        identities[req.citizen] = Identity({\\r\\n            fullName: req.fullName,\\r\\n            dateOfBirth: req.dateOfBirth,\\r\\n            dateOfExpiry: dateOfExpiry,\\r\\n            citizenship: req.citizenship,\\r\\n            exists: true\\r\\n        });\\r\\n\\r\\n        emit RequestApproved(requestId, req.citizen);\\r\\n        emit IdentityCreated(req.citizen, req.fullName);\\r\\n    }\\r\\n\\r\\n    /// @notice Issuer rejects a request\\r\\n    function rejectRequest(uint256 requestId) external onlyIssuer {\\r\\n        Request storage req = requests[requestId];\\r\\n        require(req.status == RequestStatus.Pending, \\\"Request not pending\\\");\\r\\n        req.status = RequestStatus.Rejected;\\r\\n        emit RequestRejected(requestId, req.citizen);\\r\\n    }\\r\\n\\r\\n    // --- Identity Access ---\\r\\n\\r\\n    function identityExists(address user) external view returns (bool) {\\r\\n        return identities[user].exists;\\r\\n    }\\r\\n\\r\\n    function getMyIdentity() external view returns (Identity memory) {\\r\\n        require(identities[msg.sender].exists, \\\"Identity does not exist\\\");\\r\\n        return identities[msg.sender];\\r\\n    }\\r\\n\\r\\n    function getIdentity(address user) external view returns (Identity memory) {\\r\\n        require(identities[user].exists, \\\"Identity does not exist\\\");\\r\\n        return identities[user];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4895ab83400738c677dadbf5cf7595797e5fd600d388684693c76eafc135cebc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approveRequest(uint256,uint256)": {
        "notice": "Issuer approves a request and issues an identity"
      },
      "getPendingRequests()": {
        "notice": "Issuer views all pending requests (IDs only)"
      },
      "rejectRequest(uint256)": {
        "notice": "Issuer rejects a request"
      },
      "submitRequest(string,uint256,string)": {
        "notice": "Citizen submits a new request for ID issuance"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6,
        "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
        "label": "nextRequestId",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 37,
        "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
        "label": "requests",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Request)32_storage)"
      },
      {
        "astId": 42,
        "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
        "label": "citizenRequestIds",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 58,
        "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
        "label": "identities",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Identity)53_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(RequestStatus)18": {
        "encoding": "inplace",
        "label": "enum DigitalIdentity.RequestStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Identity)53_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DigitalIdentity.Identity)",
        "numberOfBytes": "32",
        "value": "t_struct(Identity)53_storage"
      },
      "t_mapping(t_uint256,t_struct(Request)32_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DigitalIdentity.Request)",
        "numberOfBytes": "32",
        "value": "t_struct(Request)32_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Identity)53_storage": {
        "encoding": "inplace",
        "label": "struct DigitalIdentity.Identity",
        "members": [
          {
            "astId": 44,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "fullName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 46,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "dateOfBirth",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 48,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "dateOfExpiry",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 50,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "citizenship",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 52,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "exists",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Request)32_storage": {
        "encoding": "inplace",
        "label": "struct DigitalIdentity.Request",
        "members": [
          {
            "astId": 20,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 22,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "citizen",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 24,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "fullName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 26,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "dateOfBirth",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "citizenship",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 31,
            "contract": "contracts/DigitalIdentity.sol:DigitalIdentity",
            "label": "status",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(RequestStatus)18"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}